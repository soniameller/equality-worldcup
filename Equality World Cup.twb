<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource inline='true' name='Clipboard_20200524T113746' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20200524T113746' name='Clipboard_20200524T113746leaf'>
            <connection class='textscan' directory='/Users/soniameller/Documents/Mi Repositorio de Tableau/Fuentes de datos' filename='Clipboard_20200524T113746.txt' />
          </named-connection>
        </named-connections>
        <relation connection='Clipboard_20200524T113746leaf' name='Clipboard_20200524T113746#txt' table='[Clipboard_20200524T113746#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Country Name x' ordinal='0' />
            <column datatype='integer' name='Avg. fifa_rank' ordinal='1' />
            <column datatype='integer' name='Avg. gender_rank' ordinal='2' />
            <column datatype='integer' name='fifa_rank' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clipboard_20200524T113746#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name x]</local-name>
            <parent-name>[Clipboard_20200524T113746#txt]</parent-name>
            <remote-alias>Country Name x</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. fifa_rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg. fifa_rank]</local-name>
            <parent-name>[Clipboard_20200524T113746#txt]</parent-name>
            <remote-alias>Avg. fifa_rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. gender_rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg. gender_rank]</local-name>
            <parent-name>[Clipboard_20200524T113746#txt]</parent-name>
            <remote-alias>Avg. gender_rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fifa_rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fifa_rank]</local-name>
            <parent-name>[Clipboard_20200524T113746#txt]</parent-name>
            <remote-alias>fifa_rank</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg. fifa rank' datatype='integer' name='[Avg. fifa_rank]' role='measure' type='quantitative' />
      <column caption='Avg. gender rank' datatype='integer' name='[Avg. gender_rank]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Name x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.401887' measure-ordering='alphabetic' measure-percentage='0.598113' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='gender-fifa-dataset' inline='true' name='federated.106ibsu01t65iq18tefiw00sly1n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gender-fifa-dataset' name='textscan.0oflldb1dpqx4v1c48j0a0n4p11l'>
            <connection class='textscan' directory='/Users/soniameller/ironhack/data/projects/equality-worldcup' filename='gender-fifa-dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0oflldb1dpqx4v1c48j0a0n4p11l' name='gender-fifa-probabilities.csv' table='[gender-fifa-probabilities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country ISO3' ordinal='0' />
            <column datatype='string' name='Country Name_x' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Index' ordinal='3' />
            <column datatype='real' name='gender_rank' ordinal='4' />
            <column datatype='string' name='Gender' ordinal='5' />
            <column datatype='string' name='Country Name_y' ordinal='6' />
            <column datatype='integer' name='fifa_rank' ordinal='7' />
            <column datatype='integer' name='Total Points  PTS' ordinal='8' />
            <column datatype='real' name='Previous Points  Prev.Pts' ordinal='9' />
            <column datatype='integer' name='+/-' ordinal='10' />
            <column datatype='real' name='p' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country ISO3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country ISO3]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Country ISO3</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name_x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name_x]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Country Name_x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Index]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Index</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender_rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gender_rank]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>gender_rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name_y]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Country Name_y</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fifa_rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fifa_rank]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>fifa_rank</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Points  PTS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Points  PTS]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Total Points  PTS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Previous Points  Prev.Pts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Previous Points  Prev.Pts]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>Previous Points  Prev.Pts</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>+/-</remote-name>
            <remote-type>20</remote-type>
            <local-name>[+/-]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>+/-</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>p</remote-name>
            <remote-type>5</remote-type>
            <local-name>[p]</local-name>
            <parent-name>[gender-fifa-probabilities.csv]</parent-name>
            <remote-alias>p</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
          <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
          <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
          <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
          <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
          <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
          <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
          <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
          <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
          <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
          <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
          <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
          <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
          <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
          <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
          <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
          <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
          <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
          <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
          <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
          <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
          <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
          <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
          <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
          <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
          <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
          <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
          <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
          <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
          <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
          <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
          <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
          <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
          <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
          <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
          <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
          <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
          <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
          <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
          <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
          <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
          <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
          <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
          <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
        </semantic-values>
      </column>
      <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name y' datatype='string' name='[Country Name_y]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
      <column caption='Gender Rank' datatype='real' name='[gender_rank]' role='measure' type='quantitative' />
      <column caption='P' datatype='real' name='[p]' role='measure' type='quantitative' />
      <group caption='Action (Country ISO3)' hidden='true' name='[Action (Country ISO3)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country ISO3]' />
        </groupfilter>
      </group>
      <group caption='Action (Country ISO3,Country Name x)' hidden='true' name='[Action (Country ISO3,Country Name x)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country ISO3]' />
          <groupfilter function='level-members' level='[Country Name_x]' />
        </groupfilter>
      </group>
      <group caption='Action (Country ISO31,Country Name x)' hidden='true' name='[Action (Country ISO31,Country Name x)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country ISO3]' />
          <groupfilter function='level-members' level='[Country Name_x]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name x)' hidden='true' name='[Action (Country Name x)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name_x]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name x,Gender)' hidden='true' name='[Action (Country Name x,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name_x]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.401887' measure-ordering='alphabetic' measure-percentage='0.598113' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet'>
        <exclude-sheet name=' Men Avg. Fifa ranking' />
        <exclude-sheet name='Avg .Gender gap Ranking' />
        <exclude-sheet name='Avg, index' />
        <exclude-sheet name='Table' />
        <exclude-sheet name='Top 15 female fifa' />
        <exclude-sheet name='Women Avg. Fifa ranking ' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map,Scatter,Table,Top 15 female fifa' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value=' Men Avg. Fifa ranking,Avg .Gender gap Ranking,Avg\, index,Map,Table,Top 15 female fifa,Top 15 male fifa,Women Avg. Fifa ranking ' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet'>
        <exclude-sheet name=' Men Avg. Fifa ranking' />
        <exclude-sheet name='Avg .Gender gap Ranking' />
        <exclude-sheet name='Avg, index' />
        <exclude-sheet name='Table' />
        <exclude-sheet name='Women Avg. Fifa ranking ' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value=' Men Avg. Fifa ranking,Avg .Gender gap Ranking,Avg\, index,Map,Scatter,Top 15 female fifa,Top 15 male fifa,Women Avg. Fifa ranking ' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Men Avg. Fifa ranking'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Men Avg fifa ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
            <column-instance column='[fifa_rank]' derivation='Median' name='[med:fifa_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]'>
            <groupfilter function='level-members' level='[Country Name_x]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='19' />
            <format attr='width' value='59' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.106ibsu01t65iq18tefiw00sly1n].[med:fifa_rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#bab0ac' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{354CD0CD-ED84-4575-8469-1479DCF3F56C}' />
    </worksheet>
    <worksheet name='Avg .Gender gap Ranking'>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[gender_rank]' derivation='Avg' name='[avg:gender_rank:qk]' pivot='key' type='quantitative' />
            <column caption='Gender Rank' datatype='real' name='[gender_rank]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]'>
            <groupfilter function='level-members' level='[Country Name_x]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{80279E0A-04DF-41D5-BD57-1B99A9D29F95}' />
    </worksheet>
    <worksheet name='Avg, index'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gender gap index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Index]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Index]' derivation='Avg' name='[avg:Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]'>
            <groupfilter function='level-members' level='[Country Name_x]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='59' />
            <format attr='height' value='19' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' palette='gray_warm_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' />
              <text column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#bab0ac' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0CBD38F9-6333-4DC2-B78B-5C465BBDDB9B}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Index]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Index]' derivation='Avg' name='[avg:Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country ISO3]' derivation='None' name='[none:Country ISO3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name_x]' derivation='None' name='[none:Country Name_x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.106ibsu01t65iq18tefiw00sly1n].[Longitude (generated)]' field-type='quantitative' max='-65042825.802932851' min='-96770595.283755854' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.106ibsu01t65iq18tefiw00sly1n].[Latitude (generated)]' field-type='quantitative' max='11385677.26658945' min='-8886771.2789390944' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' palette='gray_warm_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' value='Search by Year'>
              <formatted-text>
                <run>Search by Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' />
              <lod column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country ISO3:nk]' />
              <lod column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]' />
              <geometry column='[federated.106ibsu01t65iq18tefiw00sly1n].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.106ibsu01t65iq18tefiw00sly1n].[Latitude (generated)]</rows>
        <cols>[federated.106ibsu01t65iq18tefiw00sly1n].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2F1A0F8F-7FF2-4A2C-B1ED-004A408C30EC}' />
    </worksheet>
    <worksheet name='Scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Index]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Index]' derivation='Avg' name='[avg:Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fifa_rank]' derivation='Avg' name='[avg:fifa_rank:qk]' pivot='key' type='quantitative' />
            <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name_x]' derivation='None' name='[none:Country Name_x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;F&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' field-type='quantitative' max='0.93144435509455481' min='0.55000000000000004' range-type='fixed' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]' field-type='quantitative' max='80.0' min='0.0' range-type='fixed' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Tableau Light' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' palette='gray_warm_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' value='false' />
            <format attr='break-on-special' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='opacity' id='refline2' value='52' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' value='Filter by year' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-family' value='Tableau Light' />
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' />
              <lod column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]' />
            </encodings>
            <reference-line axis-column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' z-order='1' />
            <reference-line axis-column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-table' value-column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='604' />
                <format attr='maxwidth' value='604' />
                <format attr='minheight' value='437' />
                <format attr='maxheight' value='437' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='604' />
                <format attr='maxwidth' value='604' />
                <format attr='minheight' value='437' />
                <format attr='maxheight' value='437' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]</rows>
        <cols>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]</cols>
      </table>
      <simple-id uuid='{EA7D0EB4-6F0E-425E-A386-83AAE9D19283}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource name='Clipboard_20200524T113746' />
          </datasources>
          <datasource-dependencies datasource='Clipboard_20200524T113746'>
            <column caption='Avg. fifa rank' datatype='integer' name='[Avg. fifa_rank]' role='measure' type='quantitative' />
            <column caption='Avg. gender rank' datatype='integer' name='[Avg. gender_rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name x]' derivation='None' name='[none:Country Name x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Avg. fifa_rank]' derivation='Sum' name='[sum:Avg. fifa_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg. gender_rank]' derivation='Sum' name='[sum:Avg. gender_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fifa_rank]' derivation='Sum' name='[sum:fifa_rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Clipboard_20200524T113746].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Clipboard_20200524T113746].[sum:Avg. fifa_rank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Clipboard_20200524T113746].[sum:Avg. gender_rank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Clipboard_20200524T113746].[sum:fifa_rank:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Clipboard_20200524T113746].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Clipboard_20200524T113746].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Clipboard_20200524T113746].[none:Country Name x:nk]</rows>
        <cols>[Clipboard_20200524T113746].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{950651F3-4856-4F5A-9950-34F89A23AF38}' />
    </worksheet>
    <worksheet name='Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Index]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Points  PTS]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Index]' derivation='Avg' name='[avg:Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Index]' derivation='Avg' name='[avg:Index:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Total Points  PTS]' derivation='Avg' name='[avg:Total Points  PTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fifa_rank]' derivation='Avg' name='[avg:fifa_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gender_rank]' derivation='Avg' name='[avg:gender_rank:ok]' pivot='key' type='ordinal' />
            <column-instance column='[p]' derivation='Avg' name='[avg:p:qk]' pivot='key' type='quantitative' />
            <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
            <column caption='Gender Rank' datatype='real' name='[gender_rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name_x]' derivation='None' name='[none:Country Name_x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column caption='P' datatype='real' name='[p]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:vtavg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.106ibsu01t65iq18tefiw00sly1n].[avg:p:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.106ibsu01t65iq18tefiw00sly1n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:vtavg:qk]&quot;</bucket>
              <bucket>&quot;[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]&quot;</bucket>
              <bucket>&quot;[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Total Points  PTS:qk]&quot;</bucket>
              <bucket>&quot;[federated.106ibsu01t65iq18tefiw00sly1n].[avg:p:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]'>
            <groupfilter function='level-members' level='[Country Name_x]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[avg:gender_rank:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[avg:gender_rank:ok]' member='%null%' />
                <groupfilter function='member' level='[avg:gender_rank:ok]' member='0.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Total Points  PTS:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[:Measure Names]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.106ibsu01t65iq18tefiw00sly1n].[:Measure Names]' value='87' />
            <format attr='text-format' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:vtavg:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:p:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]' value='40' />
            <format attr='width' field='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]' value='92' />
            <format attr='width' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:ok]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' />
              <text column='[federated.106ibsu01t65iq18tefiw00sly1n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:ok] / ([federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk] / [federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]))</rows>
        <cols>[federated.106ibsu01t65iq18tefiw00sly1n].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5802E650-A9B1-49B8-8C3F-216A85FE0858}' />
    </worksheet>
    <worksheet name='Top 15 female fifa'>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[fifa_rank]' derivation='Avg' name='[avg:fifa_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gender_rank]' derivation='Avg' name='[avg:gender_rank:qk]' pivot='key' type='quantitative' />
            <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
            <column caption='Gender Rank' datatype='real' name='[gender_rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name_x]' derivation='None' name='[none:Country Name_x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[fifa_rank]' derivation='Sum' name='[sum:fifa_rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]'>
            <groupfilter count='15' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([fifa_rank])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name_x:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]' direction='ASC' using='[federated.106ibsu01t65iq18tefiw00sly1n].[sum:fifa_rank:qk]' />
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]' context='true'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;F&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' palette='gray_warm_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' />
              <tooltip column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]</rows>
        <cols>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</cols>
      </table>
      <simple-id uuid='{A277E84C-68C2-43D4-879D-288554C339F0}' />
    </worksheet>
    <worksheet name='Top 15 male fifa'>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[fifa_rank]' derivation='Avg' name='[avg:fifa_rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gender_rank]' derivation='Avg' name='[avg:gender_rank:qk]' pivot='key' type='quantitative' />
            <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
            <column caption='Gender Rank' datatype='real' name='[gender_rank]' role='measure' type='quantitative' />
            <column-instance column='[Country Name_x]' derivation='None' name='[none:Country Name_x:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[fifa_rank]' derivation='Sum' name='[sum:fifa_rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]'>
            <groupfilter function='level-members' level='[Country Name_x]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]'>
            <groupfilter count='15' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([fifa_rank])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name_x:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]' direction='ASC' using='[federated.106ibsu01t65iq18tefiw00sly1n].[sum:fifa_rank:qk]' />
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]' context='true'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;M&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' palette='gray_warm_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' />
              <tooltip column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]</rows>
        <cols>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</cols>
      </table>
      <simple-id uuid='{508570FA-F598-4BDE-AAE5-6B4D3ECE369C}' />
    </worksheet>
    <worksheet name='Women Avg. Fifa ranking '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Women Avg fifa ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
          </datasources>
          <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
            <column caption='Country ISO31' datatype='string' name='[Country ISO3]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ALG&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;ANG&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;BAH&quot;' value='&quot;Bahamas&quot;' />
                <semantic-value key='&quot;BAN&quot;' value='&quot;Bangladesh&quot;' />
                <semantic-value key='&quot;BHU&quot;' value='&quot;Bhutan&quot;' />
                <semantic-value key='&quot;BOT&quot;' value='&quot;Botswana&quot;' />
                <semantic-value key='&quot;BRU&quot;' value='&quot;Brunei Darussalam&quot;' />
                <semantic-value key='&quot;BUL&quot;' value='&quot;Bulgaria&quot;' />
                <semantic-value key='&quot;CAM&quot;' value='&quot;Cambodia&quot;' />
                <semantic-value key='&quot;CGO&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;CHA&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;CHI&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;CRC&quot;' value='&quot;Costa Rica&quot;' />
                <semantic-value key='&quot;CRO&quot;' value='&quot;Croatia&quot;' />
                <semantic-value key='&quot;DEN&quot;' value='&quot;Denmark&quot;' />
                <semantic-value key='&quot;ENG&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;FIJ&quot;' value='&quot;Fiji&quot;' />
                <semantic-value key='&quot;GAM&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;GER&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;GRE&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;GUA&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;GUI&quot;' value='&quot;Guinea&quot;' />
                <semantic-value key='&quot;HON&quot;' value='&quot;Honduras&quot;' />
                <semantic-value key='&quot;KSA&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;KUW&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LES&quot;' value='&quot;Lesotho&quot;' />
                <semantic-value key='&quot;LIB&quot;' value='&quot;Lebanon&quot;' />
                <semantic-value key='&quot;MAD&quot;' value='&quot;Madagascar&quot;' />
                <semantic-value key='&quot;MAS&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;MRI&quot;' value='&quot;Mauritius&quot;' />
                <semantic-value key='&quot;MTN&quot;' value='&quot;Mauritania&quot;' />
                <semantic-value key='&quot;MYA&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NCA&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;NED&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;NEP&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;PAR&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;PHI&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;POR&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;RSA&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;SIN&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;SRI&quot;' value='&quot;Sri Lanka&quot;' />
                <semantic-value key='&quot;SUI&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;TAN&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;TOG&quot;' value='&quot;Togo&quot;' />
                <semantic-value key='&quot;TRI&quot;' value='&quot;Trinidad and Tobago&quot;' />
                <semantic-value key='&quot;URU&quot;' value='&quot;Uruguay&quot;' />
                <semantic-value key='&quot;VIE&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;ZAM&quot;' value='&quot;Zambia&quot;' />
                <semantic-value key='&quot;ZIM&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Name x' datatype='string' name='[Country Name_x]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gender1' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[fifa_rank]' derivation='Avg' name='[avg:fifa_rank:qk]' pivot='key' type='quantitative' />
            <column caption='Fifa Rank' datatype='integer' name='[fifa_rank]' role='measure' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country ISO3]' />
              <groupfilter function='level-members' level='[Country Name_x]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]'>
            <groupfilter function='level-members' level='[Country Name_x]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;F&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' context='true' filter-group='3'>
            <groupfilter function='member' level='[none:Year:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO3,Country Name x)]</column>
            <column>[federated.106ibsu01t65iq18tefiw00sly1n].[Action (Country ISO31,Country Name x)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#bab0ac' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D1F5F10C-34B8-4C69-BC19-024757859724}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='2000' maxwidth='1000' minheight='2000' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='gender-fifa-dataset' name='federated.106ibsu01t65iq18tefiw00sly1n' />
      </datasources>
      <datasource-dependencies datasource='federated.106ibsu01t65iq18tefiw00sly1n'>
        <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='3850' id='21' type='empty' w='13800' x='34200' y='7050'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#463e3d53' />
          </zone-style>
        </zone>
        <zone h='5800' id='13' param='horz' type='layout-flow' w='100600' x='-500' y='250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#463e3d' />
          </zone-style>
        </zone>
        <zone h='14650' id='3' name='Map' show-title='false' w='45800' x='1800' y='11650' />
        <zone h='20300' id='4' name='Scatter' show-title='false' w='49300' x='50000' y='8050' />
        <zone h='2850' id='7' mode='dropdown' name='Scatter' param='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' type='filter' values='database' w='16000' x='81500' y='1800' />
        <zone forceUpdate='true' h='1700' id='14' type='text' w='34500' x='9300' y='2300'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='20'>Equality World Cup</run>
          </formatted-text>
        </zone>
        <zone friendly-name='GENDER GAP INDEX' h='4000' id='16' param='vert' type='layout-flow' w='13900' x='2000' y='7000'>
          <zone fixed-size='24' forceUpdate='true' h='1600' id='15' is-fixed='true' type='text' w='13700' x='2100' y='7050'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000'>GENDER GAP INDEX</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='25' h='1650' id='8' is-fixed='true' name='Avg, index' show-title='false' w='13700' x='2100' y='8650'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone friendly-name='GENDER GAP RANK' h='3900' id='18' param='vert' type='layout-flow' w='14100' x='17900' y='7000'>
          <zone fixed-size='24' h='1600' id='19' is-fixed='true' type='text' w='13900' x='18000' y='7050'>
            <formatted-text>
              <run fontcolor='#000000'>GENDER GAP RANK</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='1400' id='17' name='Avg .Gender gap Ranking' show-title='false' w='13900' x='18000' y='8650'>
            <layout-cache fixed-size-h='20' fixed-size-w='60' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='1500' id='20' type='text' w='21200' x='55800' y='6500'>
          <formatted-text>
            <run fontcolor='#000000'>WOMEN FIFA RANK / GENDER INDEX</run>
          </formatted-text>
        </zone>
        <zone h='1500' id='22' type='text' w='10000' x='36700' y='7050'>
          <formatted-text>
            <run fontcolor='#000000'>FIFA RANKING</run>
          </formatted-text>
        </zone>
        <zone h='1950' id='23' name=' Men Avg. Fifa ranking' show-title='false' w='6200' x='34700' y='9650' />
        <zone h='1400' id='25' name='Women Avg. Fifa ranking ' show-title='false' w='6500' x='41300' y='9650' />
        <zone h='850' id='26' is-centered='0' is-scaled='1' param='/Users/soniameller/Downloads/female_icon.png' type='bitmap' w='1000' x='43400' y='8600' />
        <zone h='650' id='27' is-centered='0' is-scaled='1' param='/Users/soniameller/Downloads/male_icon.png' type='bitmap' w='1300' x='37700' y='8650' />
        <zone h='29700' id='28' name='Table' show-title='false' w='47600' x='51800' y='30050' />
        <zone h='13850' id='29' name='Top 15 female fifa' show-title='false' w='45900' x='1800' y='29900' />
        <zone h='3150' id='30' name='Top 15 female fifa' pane-specification-id='0' param='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' type='color' w='18500' x='29900' y='26100' />
        <zone forceUpdate='true' h='1500' id='31' type='text' w='18700' x='1800' y='27000'>
          <formatted-text>
            <run fontcolor='#000000'>TOP 15 TEAMS IN FIFA RANKING</run>
          </formatted-text>
        </zone>
        <zone h='1500' id='32' type='text' w='10000' x='2200' y='28800'>
          <formatted-text>
            <run fontsize='11'>WOMEN</run>
          </formatted-text>
        </zone>
        <zone h='1500' id='33' type='text' w='10000' x='2100' y='43800'>
          <formatted-text>
            <run fontsize='11'>MEN</run>
          </formatted-text>
        </zone>
        <zone h='5350' id='36' is-centered='0' is-scaled='1' param='/Users/soniameller/Downloads/4fd43b707b099df22476161d8838e38e (2).png' type='bitmap' w='19300' x='100' y='700' />
        <zone h='14250' id='40' name='Top 15 male fifa' show-title='false' w='45000' x='1700' y='45800' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2700' minheight='2700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='99200' id='45' param='vert' type='layout-flow' w='98400' x='800' y='400'>
                <zone fixed-size='107' h='5350' id='36' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/soniameller/Downloads/4fd43b707b099df22476161d8838e38e (2).png' type='bitmap' w='19300' x='100' y='700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1700' id='14' type='text' w='34500' x='9300' y='2300'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontsize='20'>Equality World Cup</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1500' id='20' type='text' w='21200' x='55800' y='6500'>
                  <formatted-text>
                    <run fontcolor='#000000'>WOMEN FIFA RANK / GENDER INDEX</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' forceUpdate='true' h='1600' id='15' type='text' w='13700' x='2100' y='7050'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000'>GENDER GAP INDEX</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='1600' id='19' type='text' w='13900' x='18000' y='7050'>
                  <formatted-text>
                    <run fontcolor='#000000'>GENDER GAP RANK</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1500' id='22' type='text' w='10000' x='36700' y='7050'>
                  <formatted-text>
                    <run fontcolor='#000000'>FIFA RANKING</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2850' id='7' mode='dropdown' name='Scatter' param='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' type='filter' values='database' w='16000' x='81500' y='1800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='20300' id='4' is-fixed='true' name='Scatter' show-title='false' w='49300' x='50000' y='8050'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='17' h='850' id='26' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/soniameller/Downloads/female_icon.png' type='bitmap' w='1000' x='43400' y='8600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='25' h='1650' id='8' is-fixed='true' name='Avg, index' show-title='false' w='13700' x='2100' y='8650'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='1400' id='17' is-fixed='true' name='Avg .Gender gap Ranking' show-title='false' w='13900' x='18000' y='8650'>
                  <layout-cache fixed-size-h='20' fixed-size-w='60' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='13' h='650' id='27' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/soniameller/Downloads/male_icon.png' type='bitmap' w='1300' x='37700' y='8650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='39' h='1950' id='23' is-fixed='true' name=' Men Avg. Fifa ranking' show-title='false' w='6200' x='34700' y='9650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='28' h='1400' id='25' is-fixed='true' name='Women Avg. Fifa ranking ' show-title='false' w='6500' x='41300' y='9650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='14650' id='3' is-fixed='true' name='Map' show-title='false' w='45800' x='1800' y='11650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='1500' id='31' type='text' w='18700' x='1800' y='27000'>
                  <formatted-text>
                    <run fontcolor='#000000'>TOP 15 TEAMS IN FIFA RANKING</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1500' id='32' type='text' w='10000' x='2200' y='28800'>
                  <formatted-text>
                    <run fontsize='11'>WOMEN</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='277' h='13850' id='29' is-fixed='true' name='Top 15 female fifa' show-title='false' w='45900' x='1800' y='29900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3150' id='30' name='Top 15 female fifa' pane-specification-id='0' param='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' type='color' w='18500' x='29900' y='26100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29700' id='28' is-fixed='true' name='Table' show-title='false' w='47600' x='51800' y='30050'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1500' id='33' type='text' w='10000' x='2100' y='43800'>
                  <formatted-text>
                    <run fontsize='11'>MEN</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='14250' id='40' is-fixed='true' name='Top 15 male fifa' show-title='false' w='45000' x='1700' y='45800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B1B23C93-821F-4A4F-8E4A-EFDA091B4CA3}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{852B863D-1083-4CA9-A200-5C0BAF2F3459}' />
    </window>
    <window class='worksheet' name='Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:ok]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Calculation_52213663628746754:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Calculation_52213663628771332:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country ISO3:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[sum:Rank:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66DF626E-184E-4865-A02E-32985721636F}' />
    </window>
    <window class='worksheet' name='Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:fifa_rank:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{481B34B8-40CF-4494-AAB1-9A3E6EC0A9AD}' />
    </window>
    <window class='worksheet' name='Avg, index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Index:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E0162A3-E608-4642-B27A-920E94446121}' />
    </window>
    <window class='worksheet' name='Avg .Gender gap Ranking'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9230B117-9400-4AFA-AEE8-D2F3897C12DB}' />
    </window>
    <window class='worksheet' name=' Men Avg. Fifa ranking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Rnk:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B010C51-4BD6-4A8E-A0F5-E6553F8A497B}' />
    </window>
    <window class='worksheet' name='Women Avg. Fifa ranking '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Rnk:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1422C22-B8C1-410E-9799-E6541B76B7C2}' />
    </window>
    <window class='worksheet' name='Top 15 female fifa'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card size='31' type='pages' />
            <card size='138' type='filters' />
            <card size='197' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Rank:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country ISO3:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C02C5687-01B2-4DF6-AD06-500976A63DC8}' />
    </window>
    <window class='worksheet' name='Top 15 male fifa'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card size='31' type='pages' />
            <card size='138' type='filters' />
            <card size='197' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.106ibsu01t65iq18tefiw00sly1n].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.106ibsu01t65iq18tefiw00sly1n].[avg:gender_rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[avg:Rank:qk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country ISO3:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Country Name_x:nk]</field>
            <field>[federated.106ibsu01t65iq18tefiw00sly1n].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{778193FD-FA75-450D-935A-0AB2459327D8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' Men Avg. Fifa ranking' />
        <viewpoint name='Avg .Gender gap Ranking' />
        <viewpoint name='Avg, index' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Table' />
        <viewpoint name='Top 15 female fifa'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 15 male fifa'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Women Avg. Fifa ranking ' />
      </viewpoints>
      <active id='-1' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{0F905068-2BD0-484C-A988-8DE044294684}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBDDAFD6-1E68-4B60-8FF2-9B324A08F9F5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='23' name=' Men Avg. Fifa ranking' width='63'>
      iVBORw0KGgoAAAANSUhEUgAAAD8AAAAXCAYAAAC8oJeEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC8klEQVRYhe2YO0srXRSGn8QxgiGQoMRMVCIp1UZQEGzURpBISoWgIP4CbwiiWNmIVtbi
      pVMDWmhjJyqCRUQbzSg6USExoqiMtyTO/gohfOFcmHMgxyJ5qpm15t3rfWGxizEJIQQ5ivm7
      DXwn+fC5Sj58rpIPn6vkw+cq+fC5Sj78d/L4+IiqqiSTyb/S67rO1dUViUTij7XSX000wNTU
      FAcHBxk1VVVZWVnB6/Xy+vrK2NgY9/f3lJaWcn5+zsLCAg6HI0PT09PDy8sLJpMJAFmWmZ2d
      BUBRFEZGRqisrOTy8pL+/n5aW1uNmxT/CEVRRGdnp9B1XQghxOTkpFhcXEz3Pz4+RCqV+kHX
      3t7+yzMDgYAIhUJCCCFub2+Fz+cTmqYZ9vTP1n5paYnu7m5MJhNvb2/s7+8TCATSfYvFQkFB
      QYbm7u4Op9P50/Our68xm83U1dUB4HQ6aWpqYm9vz7CnrK39/4lGoxwdHTExMQFALBbD7Xaz
      sbHB8fExkiTR0dFBbW1thi4SiaBpGnNzc5SUlNDc3IzdbgcgHo9TVVWV8b3H4yEejxv2lfXw
      T09P9PX1EQwGkaSvcZ+fn1itVvx+P36/H4BgMMjW1hYDAwNpbX19Paurq+n3i4sL2tra2NnZ
      obCwkFQqlTErlUphsVgMe8v62i8vL+Pz+SguLk7XZFkmHA6j63q6Vl5ejqZpvz3L6/Xi8Xh4
      eHjA5XIRDocz+qenp8iybNhbVsO/v7+zvr5OV1dXRt1qtVJTU8Pa2lq6tr29TXV1NfB1iwNs
      bm6mnwFOTk7QNI2ysjKcTid2u53d3V3g6w44PDyksbHRsD+TENn7gRkMBlEUhdHR0R96sViM
      oaEhbDYbiUQCm83G9PQ0kiTR29vL/Pw8oVCImZkZkskkDoeDaDTK+Pg4DQ0NAJydnTE4OEhF
      RQWqqjI8PExLS4thf1kNb4SbmxskScLlcv3yG03TeH5+xuVyYTZnLquu60QiEdxuN0VFRX80
      +z/F5+w2V7soagAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='24' name='Avg .Gender gap Ranking' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACm0lEQVRYhe2YP0hyYRSHnxthmP2BMAiDIMo1aGtoqSWIlhZ1KBoaIloqa5AMGoJCG5yC
      lgKhQXGIcg1qdaohAhsyMEpI4g6WaN3TlB+XT9BbXO4Hn8/0cs495/zuj3Pf4SoiIvzHNFkt
      wGoaBlgtwGoaBlgtwGoaBlgtwGoaBlgtwGoaBlgtwGoaBpg9QETIZrM8Pz9XzX98fFAqlX41
      4+XlhdfX1x/VNv9qcg1ub2/Z3NzE5XJRKpXo6OggFAoBoGkayWSSg4MD5ubm8Hg8f9WHQiFS
      qZQulslkiMfj9Pf3k0gkiEajdHd3k8vlGBgYYG9vD5vNVr9IMYlisSjT09Nyd3eni32zsrIi
      4XBYwuGwxGKxunqm02nxer2iaZq8vb3J9va2qKpayfv9fjk9PTWk07QNOD8/Z2RkhMHBwUqs
      paWlct7d3cVms3F8fFx3z2g0yuzsLIqiYLfb2djY0OWdTieKohjSadod8Pj4SGdnJ4eHhwSD
      Qfb391FVtZI3tKbA09MT19fXTExMVM3H43FSqRTj4+OG+pq2AZ+fn/T19TE5OVmJLSwssLS0
      xNDQkKFeqqoyPz9PIpGgufmPZE3TWF9fx+FwEAwGq94jtTBtA1wuFzc3N7pYb28vhULBcK9Y
      LMbU1BStra26eCQSweFwsLW1ZXijvjHNgLGxMS4vL8lmswC8v79zdXWF2+2uWZtOpyvnYrHI
      yckJPp9P94yIcHFxQSAQoKnp569h2ifQ3t7O2toai4uLuN1uMpkMPp8Pp9NJPp9neXkZgHw+
      j4hwdnbG8PAwq6ur7OzscHR0BEAymWR0dJSuri5d//v7e3K5HDMzM7q4x+PB6/XWrVMRMfev
      cLlc5uHhgZ6eHtra2swc9SNMN+Bf5wuMM7sjmIqJDQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='23' name='Avg, index' width='63'>
      iVBORw0KGgoAAAANSUhEUgAAAD8AAAAXCAYAAAC8oJeEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADe0lEQVRYhe2Ya2xTZRjHf71sca0bdFvbde1YQDTKZZshmKEJEgImEqPERP0yY6bDL1wC
      mLA54xhG3ZghiIISTfwCJI6Ei7dAmBZ1MQEzdnEZkHVbV9p1jLWzMtcOenYeP0ybNKthsho+
      tL9v58n/fc7/f855n5O8GhERUhTtvTZwL0mHT1XS4VOVdPhUJR0+VUmHT1XS4ZOJiDDs9xON
      RmelH795E/+QD0VR4ur+IR9TU1N35SESDs9Kp7+r7v+Cx+3mww/2YrMV4vN6qais5LFVjyfU
      TkYiHNy/jz9CIeabcvF6PLzT1EROzjy+OXWS3qtX8LjdbNq8heWlZaiqyq5tW+N7TEYwGI00
      HfgYgH6Xi+ZjR1CiUerea7izYUkitTt3yJWeHhERCQYCsnVTlYQnJhJqP//kkHx98kTs+vbt
      W6IoivS7XLK7ZpeIiAz5vLKl6lWJRCIJexw/dlRONH8pIiItZ89I4556+dnplD21NbPym7TP
      fmR4GK1Wy8NLlgCQm5dH2YoVdLa3z9Dempzkt44ONjz7XKyWkZGJTqejz9XLspJSAArtDh5Z
      uozL3d0Je/zk/IGnnt4AwJNr11Jdt5ulJSWz9py08MFgkEKHI65WaLczFgzM0AYCASxWC63n
      nXx26CBfHP6Uvt5eAEwmE91dXTGt3eFI2MPZco6V5au4PzsbmH54/5Wk7Xm9Xo+ixA85RVHI
      yMiYoVWnpsgyGFizbj1r1q0H4PuzZ7jwSysVla+xvLSM5qNHcCwoJhQKYbXZ4ta3/niegT4X
      m3e8MSfPSXvz+WYzg253XG1wYIB8syWxdmAAVVVjNYu1gPDE9JS+LyuLlype5onVq+l3ubAX
      FcV0IsK3p0/xzMbn5+w5aeFz8/LIzs6h41IbMD0Drl7uoeTRMgB+HxtjyOsFIMtg4IEHH8LZ
      ci62vu3XiyxavBiA8N+/qraLF9BqNRQtKI7pOtsvYTLlUrxw4Zw9a0SSd4B5bXCQfY3vYy0o
      wO/z8UrV66wsLwfgu69O093VSU1dPQCB0VH2NzZgMBqJRqMYjUZ2vlmLTqejevs2cnLm8ef4
      ONura7AWFMTu8e7bb7HxhRdjQ/EfDn90AO81D4qiMDoygs1uR6PRUN+wF70+8e5OangAVVUZ
      9vsxWyxkZt55CI1cv45OpyPfbI7rMXrjRlzo/4O/ACnhA/yaGqiOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      HMbvAJPDiDvjkQ7iAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      RwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatter' width='192'>
      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
      FoIwAMETzf8Hnk/IaeQP9C8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      1+spKCiguLiYoaEh5Xv6+voUzUtCQgL5+fm8+uqrXzozJhmdTkdubq6i4dFoNMyZM4eRkRFe
      eukl7rjjDuWC9ng8ykLRwoUL6e3tZWRkhLS0NEJCQoiOjp62fcGRkZFkZ2dPSCaXy8WVK1dY
      v379BKlEcHAwISEhLFy4kJ6eHgYGBsjIyCA4OJiYmJhpiyksLIzc3FxlYS04OJj4+HgaGxs5
      derUhJvk2NgYSUlJqFQqkpOTMZvN+Hw+IiMjiYiIQKfT4XK5gCkkgJz5FouF8+fP09XVhdls
      /tBxc+fOBeCDDz7A5/Mxd+5c5syZw5IlSwgKCsJoNPLDH/6QhQsX0tHRwZkzZ7Db7RN0IDJ+
      v5/6+nrKysoYHx+fsQ3ftxqSJDE8PExxcTHr16+fIBGQ9wjfuDik0+nw+XzKa5NJh6eLnp4e
      jEbjpO4TN8d0o4XjTMUkj0qOHz/OfffdR1pamvKeWq1W9mH7fD5lP7Pcfn6/X0nuT0wAr9dL
      ZWUlmzZtYu7cucTHxyu68ZGREfr6+oDrGfn973+f/Px89u3bR3BwMGazGZvNhiiKxMTEEB4e
      jtVq5fLlyzzxxBNkZGRM+qDX1NSE2WzmmWeeITo6etY8FIuiyPHjx9m4cSPLly9HrVYjiiJj
      Y2OEhoYyOjqK1+vlypUrZGZmkpiYyLVr17DZbIpkYqbiOnv2LIWFhWg0GiRJYmxsDK1Wq0gr
      KisrmT9/Punp6dTV1eFwOLBYLISHh89ITC6XiyNHjvDoo4+Snp6uPCeNj4+TkJBAc3MzkiTR
      1tZGfHw8QUFBDA4OMjAwgEajUYZxmp/85Cc/+bgvGh8fp6Ojg4cffpisrCwMBgN2u53ExEQO
      HDiAx+NhwYIFBAUF8eqrr9LT08OWLVvIzc2lra2Ns2fPkpWVhdPpJD8/H41GQ1tbG+Xl5Wg0
      GlatWoUkSRgMBoxGIyqViqysLKqrq6mrqyM0NJTVq1dP2zjyVmJgYID33nuP7u5uWltbEQSB
      vr4+GhsbqaiooL+/n+TkZE6ePMmiRYtwuVwcPnwYv9/PnXfeSXR0NGVlZVy+fJmCgoIJd8HP
      Q3V1Nfv27WNgYID29nbS0tKw2+3KQybAgQMHWLBgAQCHDh3CZrNx9913ExMTw5UrVygrK2Px
      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
      prOzk+rqarZt24bRaOTtt99WtENTbq2RkRF6enqw2WzU1dXR1dVFe3s7Bw8eJC4ujuLi4gnD
      GLvdTnp6OvX19Zw7d46rV69SWlpKTEwM77zzDs3NzezevZvU1NQJOo7ZhGw5I3tqer1eBgYG
      OHnyJC+++CINDQ3KD+t2uzEajWi1WhYtWkRPTw/Dw8Okp6cTEhJCZGSk4po2nahUKiRJ4siR
      I/znf/4nmzZtUha2ZCuWkJAQsrOz6e7upr+/n8zMTIKDg4mOjp62mMLDw1m2bJkirBsdHWV8
      fJx3332XPXv2YDKZlLayWCykpqaiUqlISUlhdHQUn89HVFSU0oZTNsaSqa2t5dSpU7S3twN/
      sFBfsWIFW7Zs+ZDwSRRFqqqqGB0dVVY2161bR1FRETqdjqGhIRITE7nttttm5d0fJlZjlAkN
      DaWwsJC77rqLc+fOTRhLy20u21Cq1Wqll5AdO2YCrVZLWloaa9asoampadLNLjMd081tJUkS
      kZGRbN26lUWLFlFWVjYhLrmtRFFU/vbG1+SecsoJ8JWvfIXvf//7rF+/ftLgbkSSJIqLi9m8
      eTMbNmyYtFsOCgqiv78fs9k87ZZ+X1SCgoIICwsjODiYxMREpfTo+Pg4ISEhmM1mfD4ftbW1
      zJ07l4SEBMWS0mazzUhPKju8ZWdns3XrVvr6+nA4HIyPj6PVanE6nTidTq5evcq8efNISUnh
      2rVrimHWTInhYmJi8Pl8REZGMmfOHABF6BYXF0d7e7uywUi2j5TFm4DSk0zpGSA6OnpC40ZF
      RSkF0GStx5w5c9BqtYqeRy6cHBISQk5ODiEhIYSFhSl+mKmpqaSmpvLLX/4SSZIwGAzT3Ua3
      PIODgxw/fpy2tjbefPNNCgoKWL16NYcOHUKlUpGXl4dWq+XIkSNs2rSJhIQEfve736HVann0
      0UdxuVzs3buXxsZGFi9ePCOaG3lDzOjoKG63m5ycHPR6PSUlJWzevJm5c+eyZ88eAB577DEA
      qqqqeO2118jMzJw2Y6zm5mbOnz9PV1cXr732Gtu3byc/P5+XX34ZjUZDUVGRUhV+zZo1FBcX
      85vf/IakpCTleerYsWP4/X7uvPPOT2+M9WmRp6g+zq5PlljLmvYA1/H5fPh8vkkrMjqdTsXr
      Ev5gGTjZsdOF/FvKWvqbv8flcimS9z9WTHJcbrdbkeHfiFyB9MYYvF4vkiQp5xAwxgowqzEY
      DAExXIDZTUAOHWDWEpBDB5j1BBIgwKxmykXyBgcHAYiNjSUlJSUwazMDCIJAZ2enIiYMCgpi
      7ty5aDQaJElSVuMjIiLIzMxUjh8fHyc9PZ3o6OhpicPj8SgLnjqdjoyMDAYGBhBFkeTkZOW3
      lyQJs9msbIlcsGCB4hclb4mMjY2dkWvF6XTS29uLIAiIokhUVBSJiYnKgld3d7eyJTIhIQG3
      2017ezt+v5+FCxcqe5Wn1AP8/ve/58033+T8+fO0tbVN+8kEuI5sENbX18e1a9d46623lNVN
      h8PBvn37MJvNHD58mIGBAbq6ujh69Cgmk4mSkpJpi2NgYICDBw/S19fHwMAAlZWVvPvuuxw/
      fnyC5sbj8XDgwAEGBwc5cuQIPT09DA0NKa+VlJRMUIlOJ7JspK+vj3PnznH27FnlPZPJxOHD
      h7HZbJSUlGC1Wrlw4QI1NTU0NTVx5swZ5dgpu0Js27ZNUQG+8soreL1ezGYzO3bsYM+ePTid
      Tm6//XZyc3P53e9+p8wd/93f/R2jo6O8+uqr+P1+nnrqKUpLS7ly5QpJSUn86Ec/mhHjpC8i
      Op2OtWvXIooib7/9Nl/96leVufXh4WGMRiObNm1i3rx5lJaWotPp2LRpE1lZWfzyl7/E4/FM
      S1uazWbi4+PJz88nNjZWufPfWLUSUEwL7rjjDhYvXsypU6eIjo7mtttuY/Hixbz44os4HI4Z
      2awfGRlJUVERfr+ftrY2RaAH12U7a9euJT8/H0EQaGlpoaenh3vuuYfo6Gj+53/+h82bNwOf
      4hng6NGj/PrXv6a8vJyenh6amprYsWMHiYmJPPzww2zdupXS0lKsViter5dvf/vbREVF0dnZ
      ydGjR1m5ciXf//73CQ0NpaqqiqeeekoxxAowkZGREaxW6wQPVlEU0el0yuq7XCA7IiJCcW+b
      rj0VYWFhiKLIm2++yRtvvDFpBRb4g1mXWq1WhG/yBS/H5HA4piWmyZD9UqOiooiPj58g0pMX
      wGTDLkEQCA4ORq1WExoaquwLmHICJCcnk5OTQ1xcHHq9nq997WtkZ2fT1tbG66+/TktLC263
      G0EQFNsOo9GoVEJfuHAhSUlJimfo6dOnP+QyFuA6tbW1LFq0aILPj1qtVhzOZI2NXq/HZrMp
      8uDp0gItWLCAJ598ku985zt0dXV95HE3Vok0m81EREQQFhammFLZbLYZlbj4/X4qKipYs2bN
      hOcMnU6nCDMdDodSXtbj8SgbZT6VFgj+4A0KKHWCAXp6ekhMTCQzM/Mjnw8yMjI4duyY4hs0
      Z84c0tLSMBgMs1YK/VE4HA4aGhp48sknlWrsLS0txMbGYjabaW1t5fz582zYsAGPx0NFRQVu
      txutVjttupuamhrlN5aVu729vYyOjmIymUhISKCpqYnk5GS8Xi+NjY1cuXKFFStWoNfrOXHi
      hBL7dHuV3sjw8DCCIChiOIvFgsViITMzk9LSUsLDw2ltbWXnzp0MDAxQU1Oj+FDJQ0vNT37y
      k5980hcFBweTkpKi6Nblf4eFhREfH09vby8ajYbly5eTmZmpzBTJxy1evJjx8XGGh4fJzs4m
      JyeH7u5uAHJzc2e0luwXDbvdzpw5c5QddYIg0N3dTXp6OlFRUdTU1JCSksKyZcuUPQAmk4kN
      GzZM8BL9PPj9fhoaGhgcHGTdunWMjY0xODiIXq/H6/WSkJBAd3c3KSkpxMXFUV9fT1xcHKtW
      rSIiIgKXy0V3dzdr164lLi5uxmYMrVYrGRkZyuzX+Pg4Y2NjZGVl4fF4uHbtGitXrlSUs+3t
      7djtdrZs2UJISAg//elPf/q5V4JvNkr9pONunEL7pL8J8GFu1LfD9XaUrSmnsy0/zef+sWL6
      NEwWw82vBZzhAsxqVCrV5FUi5ZLyAQJ82Zk0AWaqqkeAALcaAS1QgFnNp0qAmw2cAswM8sPa
      ZPh8vgmbv0VRVKqd/Kn4U8b0cVUi5XUTGUEQPiTNmNI6gCRJHDt2jMrKSiIjI9m+fTvp6emf
      M/QAk+Hz+Th16hQRERGKCRlc/w2uXLnClStXiI2NZceOHbjdbg4fPozZbGbNmjXk5eVNezyC
      IFBSUsLo6Chw3bXiwQcfVPx5amtrKS8vJyIiggceeABRFDl06BDDw8MsX76cZcuWzdhMkN1u
      p6SkhI0bN05wFhEEgaNHj9Ld3U1+fj5r1qxhZGSEw4cP4/P5uPfee5VaZ5+YAJIkcejQISor
      K3nkkUcUuzlBELh69SoOh0M5yaGhIbxeL5GRkZhMpglL0jabjWXLliGKIvX19YiiSFZWFhqN
      BpPJhNVqxWAwsGjRIlpaWpg3bx6CIGAymRTHry87oihSWVmJ3W7/0B10eHiYuro6Hn/8cU6f
      Pk1lZSWCIBAREcHmzZvZs2cPOTk5026MpVar2blzJwBtbW1cvnxZWUUdHx/n8uXLPPTQQ1y+
      fJmysjLCw8NRq9U89NBDvP7664ohwnQjl4idzBqxpqYGSZJ4+umneeutt0hMTKSiooK1a9cS
      FhbG+++/z5/92Z8BU0gAn89HdXU1999/P/Hx8QwPDxMWFsalS5coKSkhJCRE2Yn/0ksvKQ32
      q1/9iuXLl9PY2EhWVhYDAwNK5cNTp07hcDior69n5cqVvPTSS2RnZ9PR0cGf//mf8/7777N1
      61ZcLhfXrl2bNQmgUqlYvXo1nZ2dXLt2bcJ7TqeTqKgogoKCyM/P5/z58wQFBbFkyRIiIiII
      DQ3F5XJNu/RAnjP3er1KWVL5ji5vfA8LC2PJkiVKlcjs7GzCwsIIDw/H4XDMSALodDruvPNO
      ZdX5RgYHB8nMzESj0TB37lyGhobweDzExcVhNBrx+XzKRM8nJoBKpUKr1SqaCrmIc3d3N3q9
      njlz5iCKIg6Hg6ioKH7wgx8gCAKJiYk89thjPP/88+zatYuamhr6+/vRaDS4XC4SEhJobm5m
      yZIlzJ8/n2effZZf/OIXWCwWtm/fzjvvvENYWBhf+9rXpr3xblU+bqigUqmUZzC32624MMg/
      pNfrndGigtXV1cTExEwYatyoBXK73UqNM1lo5vP5Ziymj2srjUaj9KBer1cZhcjt5/f7FVeN
      T4xOq9UqHotms5muri4WLFhAVlYW1dXVZGdnIwgCWq1WUSveGODNgfb395OUlERcXJwih7iZ
      efPmKQ9Ss6U+GFwfAg0PDyv1rfr7+4mOjqa9vZ34+HgsFgstLS2UlZVRWFiIx+OhsrJSsSWZ
      Li3QzbhcLqqqqti1a5ey4aS+vp7k5GT8fj+NjY1cvXqVlStXEhISwqlTpxBFEb/fP2NF8nw+
      H0NDQwwPD6PVaomKikKj0TA2NkZmZiYXLlxAr9fT3t7Ovffey+DgoKIFSk5OVhJgUi3QjeNP
      lUpFcnKyMq6Pj4+noKCAnJwcfD4fg4ODpKWlkZycTExMDImJiUplwfT0dMLDw0lJScFgMBAf
      H8+iRYswmUwYDAaWLl3KvHnziImJYc6cOYSEhCiao9bWVrKyssjJyZmRBrwVEQSBjo4OrFYr
      ISEhiKJIdHS0Uls5OjqaxsZGRV9lNBpxOBwMDAywfv36GdHdw/UEiI2NneD43dPTo9zImpub
      iY+PZ9myZYSHh+P1ejGZTBQUFMzYjjCPx0NLS4vSC2k0GkJDQxkfH2f+/Pn4/X5aW1tZtmwZ
      aWlpxMfH09PTg9PpZOPGjYSEhPBv//Zvk2uBJvMFmkzz81n0PFPRDh0+fJiGhga++93vBjbL
      3MStqLu5FWP6KC2QzC1tjGW1WpWatAECzBQfmQABKUSA2UBwcHBADRpg9hIwxgow65m2BJAk
      CavVOmM2GF9mbtazSJL0kRoXr9f7R9HdCIIwQUvzcTFNpgWaqWH0zcU5PiouSZIUN2iZybRA
      U0qAiooKLly4gMfj4cqVK5Ne5D6fj3feeYfh4eEpn8xsRzYIeP755ydU1xkbG+OFF15Q9Ddw
      /YcvKytj9+7dvPvuu0rhirfffpsXX3yR6urqaYtrdHSUl156iRdffJFTp04B1/cq7969m97e
      3gnxV1VVsXv3bt544w0EQcDr9bJ3715++9vfUl5ePm3iSVEUaWxsZM+ePUrCS5JER0cHL7/8
      8oRKOoIg8P777/PrX/+a8+fPI0kSAwMDvPzyy+zevVsxeYMpJkBnZyetra1UVVXx3HPPcfHi
      Rex2O7W1tZw4cYK2tjb8fj99fX3K636/X9kw/adWK96quN1uLl26xPj4+IQf9cyZM5hMpglJ
      MTQ0RG1tLc888wzh4eGUl5dTVVVFTEwMjzzyCCdPnpy0dNFn4dKlSyxdupSnn36asrIyJEni
      /Pnz9PX1TZghtNlslJeX88QTT5CUlERpaSn19fXodDoef/xxLl26NOEcPg8jIyM0NTUxMjKi
      FBf0eDycOnWK4eHhCT1OVVUVKpWK733ve7S3t9Pe3s7JkycpKipi586dlJSUKIk55SGQKIoM
      DAwwPj5OZ2cnbrdbcYr7zW9+w9DQkHLs+++/T11dHb29vZSUlAQqz38EISEh7Nixg4SEBOD6
      xd/c3IzP5yM3N3fCsU6nk+joaHQ6HcuWLaO1tZX+/n4WLlxIREQEBoNh2jx45s6dy4ULF9i/
      fz9Go5GOjg7MZjPLly+fMK8va4EMBgPLly+npaWF7u5ucnNzMRgMGI3GafMqiouL47777lO0
      TpIkcfnyZWUh9UYGBgaYP38+KpWKefPmKVqg+Ph45syZM6Fe8JQTQKvVsnHjRubOncsDDzxA
      bGwseXl5aDQapdYXXPezLCoq4siRI1y8eJGcnJzAYtZHcPNCkdvt5siRI+Tm5uJyuSY8U0mS
      pCg9g4KC8Pv9igRFpVKh0+mm7fnL4/FgNBqVdZjDhw+TlZWF2+3GarV+SCkgx+Tz+fD7/Yok
      Zjpjurmtent7KS8vJycnB5fLpfgjwR8Mu+C6aE7WAKnVakXbJt+UP9VDsFwc2ePx0NXVRUlJ
      CQUFBSQmJk4Y661atYre3l7OnTs3QdMe4OMRBAGdTsfly5dpbGzk8uXLjI+P4/F4CAoKwmaz
      KVZ/SUlJREdH09vbi8fjwWKxEBERMS1x1NXVcdttt7Ft2zblwqurq6O2tpbKykqsVisej0cx
      m5JlCcnJycTHxysGv6Ojo9MW08243W4MBgPHjh2jpaWFqqoqReVpNBrp7+9HkiRMJhORkZFo
      tVqsVit2u13pueBTGGPB9S5bo9Hw3HPPsWPHDsbHxykuLqa/v3/CRS5XOe/r61O69wAfZmho
      iOPHj1NZWYnH42Ht2rU8++yzALzzzjusW7eOkJAQ9u/fz+bNmxFFkZdffpnR0VG+/e1v43A4
      eP3116mqqiIxMXHaSpIuXLiQ3//+90RHR+NyufjBD34AwIEDB1i4cCExMTG89dZbbN26FYPB
      wKuvvsrIyAjf+ta3UKvVvPjiizQ1NREeHj5tvX9zczOlpaVUV1ezZ88e7r77br71rW8B1ydg
      brvtNnp7e2lra2PFihW89tprtLa24vf7ueuuu7Db7ezduxdRFFmzZo3Sm05pIUzuxjQaDV6v
      F7vdTmRkpOK5GBISonQrWq2WgYEB9uzZw/r16yksLJyWBvgyIk9hypoVjUajyIf9fr/SZft8
      PqUrHxsbQ6/XK3cwl8uF0+lU7nLTFZfT6cTtdhMREaGoTD8qJlm8J7vAud1u7Ha7otCcjhGA
      PIUpt5VOp1MuYlneLEuztVotHo+H8fFxpV0kScJutyvWnf93HjOzElxRd17XnwAAGvtJREFU
      UYHVamX9+vUBPU+AW5aAMVaAWc1HGmO53e6A+0OAWcGkCTBdCyoBAtzqBMRwAWY1U04A2Qol
      wPQil5K6cRHH7/d/yNRJFn3JFXjkHU9erxer1TqtvbasM7LZbIrQ7GZx3I0x2Ww25Rxujmm6
      htLyd93cVjeLA+XXfT4fVqtVWQSTJAmXy4Xdbp8Q05TnzVpaWvjf//1f/t//+3/TckIB/mCC
      deDAAf7lX/6F8PBwmpub+eCDD0hJSeH+++9XjvV4PBQXF+P1ehkbG+PJJ/9/e+ceHGV1v/HP
      7ia7ySa72c39xgZyJyQYAphAEigQKlXxglVEUfEPp0477bSj03amnU47HXU6dTrTVkt11ArW
      C1e5FQRDFAIEyAUIuZBlcyf3hM1ms/fb7w/6HonSn0ETe0meP/O+2fe7Z99zzvec73OeZwt2
      u51du3YJ2sHDDz88JXFduHCBc+fOERwcTFRUFAsXLqS8vJzQ0FA2b94stjW9Xi/79+9nbGwM
      s9nMU089hVwuZ/v27Wi1WlQqFRs3bpyS7Vmr1cqxY8eor6/nF7/4BQqFgpqaGg4ePMhjjz02
      gTpiNpvZuXOn2IF8+OGHaWxspLq6mkAgwOLFiykqKgJusxAGNzgpBw8epLOzk4KCAkpLS9m9
      ezcWiwWn08mTTz5JcHAw7733njDOS0pKory8HIvFgkwm48knn5xW65z/FshkMrKysujo6BAv
      lU6no7i4+Aus2uHhYRQKBU888QSXL1+muroauVxOaWkpubm5vP7663i93il52RoaGnjggQfQ
      6/W89tprlJSUUFxcTEtLy4T7JJ+yzZs309raytmzZ9HpdBQWFrJkyRLefvttnE7nlLgABQcH
      c+eddwqGrCTWsHTp0glWUgCNjY3k5+dTWFjI4cOHaWtrw2Qy8cADD6DT6di2bRtLly4FvsIa
      IBAIkJ6ezpo1azh27BjXrl2jtrZWqLxVVlYSCARYsmQJeXl57Nu3j4GBAc6fP8+SJUsYHBz8
      QkPOVAQFBZGSkiJGKplMRlxc3BfIXXBjtggLC0OhUGAwGBgYGMBsNhMfH49SqUSn02G1Wqck
      Lr1eT3l5ORcuXKCvr4+YmJhbOr34fD6USiVKpZKUlBT6+/sZHh4mOTmZ4ODgKY0pNDQUg8Hw
      mbWRQsGcOXNu2bmsVqtQo4iJiWFsbAyPxyN81VQqlWCpTnq4uFmU6cyZM7jdbmw2GzabDa1W
      y4IFC4iIiODMmTNYrVaOHj1KUFCQeHh8fDxLlizh4sWLgok3i8lDkv+QctmQkBCUSqXIiZ1O
      55TRDlatWkVtbS02m+1LZ2opN5dikl6uqY7pdqBQKAR7weVyERISglwuF5Xkm0XEvnQG8Hg8
      mM1mGhoaCA4OxmQy4XA4eOqpp9Dr9WLBYbVaaWhoICoqipqaGgwGAw8++OCs/9fXhN/vx2w2
      ExoayvDwMG63mwsXLpCamkpCQgJGoxGLxYLD4ZiyqntoaCgrVqwgJydHGNDdjMA/HeKDg4PF
      IFhXV0d6ejoGg4HGxkbGx8exWq3TapL3ebhcLsbGxoiPj8doNBIIBISomEqlYnBwkN7eXlQq
      laB3fKkwltVqZdu2bQwNDfHoo49iMBgwGo2cP3+e5ORksrOzqaiooKmpidDQUL773e8K/c/u
      7m7mzp1LVlYWPp+PrKwsLBYLCQkJt5zmZxoGBgbYv38/Q0NDGI1GfD4fjY2N1NbWMjg4yODg
      ILGxsVRVVZGVlQXA4cOHUSqVrF69msjISOrr66mpqaGkpOSWL+tXQVtbG3v27KGtrY2ysjLq
      6uqoqqoSanXJycmcPHmS1NRUQkJCOHLkCF6vl29/+9tERkZy5coVzp49y+LFizEYDFPCBTIa
      jezfvx+LxUJLSwuhoaGcPHmS9vZ2Ojs7sdvtKBQKjEYjixcvprW1lfLycrKzs8nLyyMqKoqK
      igquXLnC+vXrCQ8Pn5wwljRl3GyNKqVDQUFBeDwefv/737Nlyxbi4+ORy+Vi20wul0+5WvFM
      hzR9S+0qSRDeLEv5dSH95jeT874sJoVCIdioEslPqVT+W8W6Pt8uUgoknaGYEmEsv98vJBOn
      S5tyFrOYDvzLDjDLBZrFTIBarZ5lg85i5mJWGGsWMx7T56gwi2nB5xW5v4pC99d57q2e9e+K
      6f/DZNXMJ9UBGhsbuX79OoWFhYyPj9PZ2cmiRYumMt5Z/BOdnZ2iUj5nzhzmz58PIPa0m5ub
      iYqKoqioCI/HQ3V1NaOjo+Tl5WEwGKY8HklU6vLly9jtdvLz85k7d6641tXVRUNDAxqNhpKS
      Evx+PzU1NYyMjJCdnU1qauq0dYRLly4xMDCAXC4nJyeHxMRE4MbGzIULF4S/XFZWFmNjY1RX
      V+PxeCguLhaH9SeVAn366ads3bpVaNF89NFHwA0FM0kMS2Iq2u12zGazkM+Q5D0AwWSU9pNt
      NhtOp1OUy202279dmv3fiUAgQHV1tSj7R0ZGimujo6N88sknpKamYjQaMZlMGI1G2tvbSUhI
      4B//+Me0bFxIHS86Opq0tDQ+/PBDUWW12+2Ul5eTnJxMV1cXzc3NdHZ20tTURHJyMseOHZs2
      UbRAIEBFRQUGgwGDwTChYt3a2kpTUxNZWVlUVlYyODjIyZMnAQgPD+fo0aOirSadAuXk5HDi
      xAlWrFgBwPXr13nxxRdxOp0kJCTw9NNP884774gytFKpZN26dcI+51e/+hV//vOf2bhxI+++
      +y5Op5O4uDiKi4s5efIkzz//PLt37yYtLW3GHqT3+XyMjY2h1+uJjIwUVp5wg+Go1+uFAV1V
      VRVKpZKioiJhCeR0Oqf8DLZcLqe4uJhAIEBzczNqtVrUIOx2O0FBQeTl5ZGQkMCRI0fE7DR/
      /nyqq6sZHx+f0JGnCuPj47jdblwuF6mpqWg0GnHt6tWrLFq0iMzMTHp6eujo6GB4eJj7778f
      vV7Pn/70J9ExJ70IXrJkCT09PfT29gJQVVXFnDlz+O1vf8v4+DgdHR309/ej0+n43ve+R0JC
      AvX19fT39xMIBLh06ZLoLOvXr6ewsJC6ujqSkpLo6+ujtbWVlpYWMjMzp7ip/nsgk8koKCjA
      brfzzjvvcOjQoVuKPYWHh2O324W+zT+LOhP0MacSPp+PU6dOUVFRwUMPPSQ6wM1iU1JMDoeD
      8PBwEdNUSSN+HkqlkuXLl9Pa2spf/vIX6urqRFtJJD24IeUjnZ+QimIqlUpIKU66A0RERFBa
      Wsrhw4cF+Umv16PValGr1Xg8HlQqFffddx96vZ60tDSam5uBGzozH330ETk5OXR3d7Nr1y5R
      KY6MjCQ3N5e3336buLi4CaPeTINCoSA/P5/169fzgx/8gIaGBjFSSZI0gUCAoaEhdDodarWa
      0dFR/H4/o6OjU0I7/jykwaulpYUnn3yS6OhocU1yXvT5fCImrVbLyMgIgUBg2mICUKlUlJaW
      smHDBu655x5aWlpEB1AqlUImcmxsTMxaTqdTSL5IHLVJp0AymYwVK1bw/vvvo1AoKCgo4A9/
      +AM2m42RkRESExMnUB9SU1Pp7u7GYDCQk5PD9u3beeyxx4QQrNVqFUHeddddPPHEE7z00ksz
      WkXO5XJx/PhxwsLCsFqtpKSkCLHc3NxcRkdHOXHiBJcuXeLRRx/Fbrdz5MgROjs70Wq1X+DF
      TwUkVeqYmBguXryIRqMhNzeXyspK8vPzRS7e3NzMhg0bCA4O5oMPPmBwcFAY100HBgcHOX/+
      PHq9nra2NubNm8fAwAC9vb2Chj8+Po7JZKKoqIjR0VGOHz8uFszSbDqpQlh3dzcajQatVkt7
      ezter5fMzEwhgJudnU1SUhKdnZ2kpKSgVCrx+/1cuXKFyMhINBoNV65c4Y477sDv91NdXU1Q
      UBAqlYoFCxYwPDzMyy+/zM9//vMZPQP4/X56enro6+sDEC7rXV1dzJkzh5GREdra2tDr9WRn
      Z+Pz+QQbND09fVraLhAIcPXqVWw2GzKZDLVaTWpqKh0dHRgMBiwWCyaTCY1GQ05ODoFAAJPJ
      xMjICKmpqcTFxU3LoObxeOjo6GBkZISwsDAyMzMFGzQpKYnW1lYGBgaYO3cuiYmJwnTd6/WS
      m5uLWq3+z9AFGh4eZu/eveTm5rJs2bIZPQPM4pvFf0QH8Pl8ExZzs5jFN4V/2QFmXSJnMROg
      UqlurQw36/M1i5mCWTLcLGY0vrEO4HA4pq0s7nA4hEPNV4XX650yi6HbhXTCbjJwOp0TBMp8
      Pt+0FZskufHbjcnv909bTJMVZ5NiuLldJd+6mzGpOsC+ffs4e/YskZGRLFq0iNLS0ts+7P7R
      Rx+Rnp5OXl7epO53uVz88pe/FCf6f/KTn6DT6W5579WrV6mvr2fz5s23FVNLSws+n4+cnBw6
      Ozs5e/Ysjz/++G19xteBtFW8f/9+fvSjHxEWFiZMIBQKBbm5uYIW4vV6+fTTT2lvb0epVPLo
      o4/icDjYt28fHo+HrKwsQVOZCni9Xv72t7+Rnp6OVqvlzJkzBAcHk5GRwZo1a4AbL+Pp06dp
      aWlBLpezadMmAoEAe/bsweVyMW/ePFavXj0lx2Ldbje1tbXU1dXxzDPPoFQq2bFjB2azGYVC
      wYoVK8S5aYfDwYEDBxgbGyM5OZmysjK6urqoqKjA5/Oxdu1a0tLSgEl2gMHBQYqLi0lPT+eV
      V15hzpw5WK1W7rjjDoaHhxkfH8dgMFBZWYnFYmHx4sVotVpOnz6N3+9n5cqVGAwGoqOjsVgs
      nDhxAq/Xy/LlywkKCqKlpUVUEktKSggKChJnOp944gl0Oh0ajYb29nZOnz5Neno6hYWFWCwW
      Tp06hclkErIXJ06coL+/X7iXNDU1ATe0bhwOB42NjSQmJrJgwQIOHjyI1WplxYoVLFy4UDRK
      a2srVVVVpKWlkZ+fT2NjIzabjYGBAVavXj2hGvp1ICluhIWFidF2YGCADRs2kJCQMOHe4eFh
      +vv72bJlC1VVVdTU1BAIBEhLS6OgoIC33nqLkpKSKXnZJAM6r9eL1+tlaGiIdevWkZGRMeE+
      q9VKW1sbjz/+OJcvX+bcuXNotVoSEhIoKSlh27ZtU+YRYbfbvyAfef36deGoczMuX75MdHQ0
      jzzyCLt376ajo4O6ujrWrl2LRqNh7969pKamAreRAnk8HkFf8Hg8HD58GJfLhclkorq6mosX
      L1JRUUF4eDgjIyMcOHCAjo4OoQ1UU1NDT08PFotFyGrs2LGD7u5uduzYAdwwY+vo6BDP9Hq9
      WCwWLBYLg4ODvPnmm0RERHDo0CFMJhPbt2+ns7MTtVpNIBCgsrJSFNneeustRkZG+OMf/8iB
      AwdwOp309fWJ/zcajQQFBaFUKgkNDWVoaIiqqiqsVitbt25FLpezd+9ezp07x6FDh2hpaaG3
      t5cjR458nd9xAiQ+i16vBz4zmD5+/DjHjx+fkNY5HA4iIiIICgpi/vz5dHV1MTg4yLx581Cr
      1Wi12ikToRoaGqK1tZXCwkLx7NOnT/Pxxx9PcAP1eDyEhIQQGhpKTk4OHR0d9PT0kJGRQUhI
      CHq9fspiioiIYNmyZSLzcDgc+P1+9uzZw7lz5yakryMjI0KNQiogut1uIiMjiYyMRCaTiRRt
      0h3g0KFDvPDCC6xatYq4uDiRi0nCSDqdDovFQltbG3FxccTGxtLe3o7ZbCYyMlKIOoWHh9Pf
      309XVxednZ34fD7S09N54IEHSEhImGCrOTQ0xMGDB/nwww/p6ekRymM2mw2TyURvby8bNmyg
      oKCAoKAgjEaj0Knp7u4WdkLPPvssOTk5hIeH09TUhMVi4fr162RmZpKdnc3y5cuFkkVXVxc6
      nY6NGzeycuVK0VHuu+8+Vq5cidlsnpIfFL7ofKhQKFi7di1FRUX4fD527do1IQeX7pXJZNN2
      6EQaSKKiohgfH2d0dJSVK1dSWlqKTCZj586dt1wXTGdM0mfe/LlqtZoNGzawYMEC4R/2rw7t
      SLZKt8KkO8Djjz/O+vXraW1tFbPB2NiY0GqMi4vj17/+NbGxsbzzzjssWbKEn/3sZwwMDFBe
      Xi4+59ChQ0RGRrJx48YvJUoZDAZ+/OMf89Of/pTIyEjCwsK44447ePrpp8nLy8Pj8dDX14fV
      asXv9xMeHk5UVBTLli3jmWeeQaPRkJSUJDrg+++/z/3338+dd95JIBBApVIxOjo6gUWp0Wiw
      WCwMDw8LCsg3BSkNmjdvHqWlpbhcLrE4V6lUmM1mvF4vDQ0NzJ07l9jYWFpbW7Hb7YyOjk6Z
      I6Ner8dut9PY2ChM0FNSUsSBFymmoKAgHA4HDoeDy5cvM2/ePJKSkmhpacHpdDIyMjJt7ed2
      uwkJCSE7O5vFixdjs9nE+ZOoqCja29sJBAJ0dnYSHR1NcHAwIyMjmM1m4WsHk1wDhIeHEx4e
      zrJly3jjjTeoqqpi7ty5vPrqq8jlchYtWiRsUz0eD0uXLuX8+fPU1dVhs9m46667sFqtKJVK
      srKy2LVrFy0tLUKhS+oIGo1G0FhlMhk6nU7ktImJiRQUFLBz504iIiJ46KGHKCoqYvv27YSF
      hTFv3jxKSkp48803ee+998jIyGDlypVEREQgk8mQy+UYDAa2bduG3+8nJSWFnJwcysvLeeON
      N7jrrrvQarUkJiaSkZHByy+/jFqtZu3atQwNDSGXyyfEOhWQBofm5mZsNhsFBQX09/fT39+P
      2+1m2bJl+P1+jh49ypo1a9Bqtbz11lv4fD6hDr1z504aGxvJysqakpFXJpOxevVqADHL1tbW
      0tXVhdfrZdGiRQQHB7N//37KysqIj49n+/btuN1unn76aQD+/ve/09bWRnJy8pRJ5RiNRk6d
      OoXRaBRri4sXL+J0OnG5XKxbt46enh7a2tooLCxk165dvP7660RGRpKSkiLSdp/Px5o1az6b
      Tb+qLpCkUSlRGCQxJZ/PN8HBUC6Xo1KpJpzLlHxvb3fBdrOuo0KhEDr2oaGhE4Si3G73hGdK
      kKi7N/8okuH0zRqWfr8fm82GWq2eMuvR24HL5RJOiJ//DtJscLObpMvlkshd0xaTRMW+ldiV
      3W5HqVSKmKSt2emOSdIfVSqVX/idJMr+zTFIXgLSuzElwlizmMV/K8LCwmZlUWYxs3HLGWBW
      K2sWMwFyufzWZLhZWvIsZgpmU6BZzGhMahvU6XTS1dUFQGxsrNhavB0MDg5y7do1CgoKbj/K
      GQKpQi7VVpKTk4XBRCAQYGxsjL6+PjQaDYmJifj9fvr7+xkfHycxMXHa9twlkw6/3y+sh6SY
      rFYrfX19qNVqkpOThZCW1WolPj4erVY7LRmFdBB/dHSUkJAQEhMTxe5eIBBgcHAQs9lMbGws
      er0et9tNb28vPp8Pg8Hw2Xb7l50I8/l8fPDBB1y+fJmYmBiSkpLYsGHDbe/v1tbW8umnn/Lc
      c899xa/8vw+v18upU6eEYJjL5WLTpk3IZDJsNhs7duwgOjqatrY2Nm3ahN1u59ChQyQkJGCz
      2XjqqaemPCZJFeLkyZNoNBrhBAk3tmt37txJWFgYnZ2dPPLIIwQFBfHee++RkpIinCOnwrjv
      87BarVRWVqJQKIQCXHFxMTKZjP7+fvbu3UtKSgrXrl1j06ZN1NXV0dHRgVwuJzExkbKyMmQy
      2a3XADfD7XbT1NREWVkZS5cuRaVS8fHHHxMREUFUVBTbtm3jhRdeYOfOneTn51NbW0tNTQ2Z
      mZls3ryZpqYmDhw4IAhz/f39bN26Fbvdzvr164mLi2PPnj04nU6Cg4P54Q9/+C9Zn//rUCgU
      FBcX43A4aGtr49KlS+La0NAQYWFh3HvvvRiNRqqqqlAoFKxatYr58+fzyiuv4Ha7p8WjISsr
      C51Ox7lz5yb83Wq14vV6ue+++7h27RqVlZXo9XpWrlxJfn4+r7/+OjabjYiIiCmPKTw8nLKy
      MsbHxzl37tyEQ1z19fUUFhZSUFDA0aNHuXr1Kh0dHdx9993o9XpeffVVvvWtbwGTWAOoVCru
      vfde3n33XV588UW6urrQaDRcvHgRk8lER0cH7e3t1NfX43a7qa6u5tlnn6Wrq4vGxkb279/P
      3Xffzbp165DJZHzyySckJCRwzz33cOzYMUF227x584RUayZCJpNhNpt57bXXeOONNwTtGBDF
      OplMRmxsLNevXxeqawqFgoiIiCkjnn0+ptDQUEJCQr6Qyvj9flGUjIuL4/r164yNjREdHY1c
      Lken003gdk11XO3t7fzud7+jpqaG/Px8cc3lcqHRaJDJZERERGCz2USBNjg4mNDQ0MmT4WQy
      GUVFRfz1r3+lrKyMrVu3Eh0dzcDAAO3t7dxzzz18+OGHgtE4MDDAvn37UCgUuFwuPB4POTk5
      xMXFAXDt2jUaGho4c+aM0HOMiYkhMzMTnU43449jxsbG8vzzz/Pcc8+xe/fuzyT8/kn3hhsa
      qxqNhtDQUOF8brVav3HvZcm5UhLm0mg0hIWFMTY29o3ElJWVxUsvvURxcTEVFRWf6X0GBQkn
      UokpIAmLSRViqfL/pSmQ3W7n8OHDJCYmCnqAXq8XC7AHH3yQ73//+2zZsoXExET0ej15eXkE
      BweTkJBAIBDg9OnTggadkZGB2Wxm1apVWK3W2S3Xm+B2uzGZTERHRxMUFITb7cbj8XDt2jXC
      wsIYGRmht7eX06dPU1BQIBwjpTacDktS6UWWZhyz2YxOp6O9vZ2oqChcLhddXV2cP3+evLw8
      wsLCOHPmDGq1elq0SiWYzWaGh4fR6/WoVCqhCTQ+Ps7cuXOpq6sjLi4Ok8nE+vXr6e7uFuZ6
      MTExn/kN38ol8mbI5XLsdju1tbU4HA42btxIYmIiKpWK1NRUcnNzAYRLYWxsrJD0W7hwIenp
      6dTV1RESEsLChQspKSnBYrFgNBqJiYkRwqaStLfBYPhGGZj/SfD7/TQ2NnLp0iVMJhP33nsv
      ERERNDU1kZaWJkRxY2NjKSoqQq/X09fXh8lkYsWKFVN2UOdmBAIBke5KnSE+Pp7m5mahYH32
      7Fm0Wi0lJSVEREQwMjLClStXWL58OfHx8dMyyLndbmpqamhoaMBms1FWVobL5aK/v1+o6NXU
      1FBQUEBGRgbx8fHU19czMDDAd77zHdRqNb/5zW9u7RJ5K0gc8C8jsAUCAcG/lkhyfr9fiKje
      6p5ZfAapvaS2uRWh7/Nt+fn2/abh8/kE4/abjOn/cyO9VQzSmRTpbzKZTPZ/2AbIFWIhHtkA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydWWxbaZqeH+6kSO37LlmrZVuyZFmSLS9lu1ybqztdma4kPQkyydUAuQ5y
      F2TmIhcJECDpJEAQBLnIxWSmM93orlR5LVuWZFnWvu8rRUncRIn7Tp5cODxjlZf2QlKqkh6g
      AJdI8Xz8df7zL+//fp9EEASBY445gkgkEon0oIM45piD5LgDHHOkOe4A74DX6z3oEI6JM8cd
      4B1wOp0HHcIxcea4AyQQQRCIRqNx+ZxAIJDU60ejUQRBwOv1EolE3uszEk3s+33IPs5xB0gg
      Y2Nj/Lf/9t/e+v1dXV3s7Oy89PNwOMzf/u3fvvP19/b2+Lf/9t/icrne6v1PnjzhP//n/8zv
      fvc75ufn2dzc5L//9//O3t7eS+/9d//u3/E//+f/ZGpq6p3jihdms5l//+//PR6P563ePzAw
      wH/8j/+Rv/mbv8Hv9wMgT2SAR53h4WH29vYwmUwMDw9z+fJlBgcHUavVjI2NUVpayldffSW+
      f319ncrKSn7zm9/g9/v55JNPMJvNzM7O4vP56O/v58mTJ9y4cYPFxUWamppwOBx0dHS88vr9
      /f1kZGQwMzODy+WitbWV7u5uamtr+f7770lLS+NP//RPUSqVAGxubnLt2jWqqqqYm5ujr68P
      k8nE7u4uv/nNb0hLS+Mf/IN/gFKpxO/3c+nSJf7whz+gUqm4f/8+J06c4IsvvkhK2wJMTk4i
      k8mYnZ3F6/XS0NDAyMgIp0+f5ne/+x0ajYY/+ZM/ITs7GwCr1UpbWxujo6Po9XrgeARIGF6v
      l+3tbfLy8hgfH2dzc5P+/n7kcjmPHz/m7//9v4/JZHrp96LRKE6nky+//JInT54wOTnJr371
      K6RSKd9++y0FBQU8fPiQmpoa/sN/+A+cOnXqtTEMDg5SXV3NyMiIeKMsLCzw5MkTvvzyS+x2
      +0vTm//9v/8333zzDTabjYaGBq5cuUJhYSFZWVmMj4+LI9TS0hL/9b/+V1paWtBqtaSmpvLg
      wYP4NuIbEASB6elpKioqGBgYQK1WMzAwwOrqKk+ePOHKlStiR40RDof55ptv8Hg8FBYWAscd
      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
      y2lpaYnLTTs1NSX+wQ4rarWa1NRUcVNCrVZjMBjo7u4mPz+f1NRUbt++/d7W0PclPT0dk8nE
      3NwcFy5cYHl5mXv37lFaWgo8HyEyMzMpLS1NqMru9XrJzMwkLS1NnBp7vV6ys7MpLy9na2sL
      nU5Hbm6uWEB7Z2eH9fV1BgYG/rgQdv78eU6cOMH6+npc1FKpVMrZs2dRq9WMjIy88j1WqxW1
      Wv1SLV61Wo1er0elUr11Frc3UV1dfWj3/2O8KIQFg0FMJhNnz56lqqqKxcVF+vr6+PLLL5Oe
      MGtnZ4epqSm+/vpr9Ho9jY2NnDx5kr6+PnJzc/cJYQ0NDQmLI1ZA0eVyIZfLCQaDaDQaLBYL
      UqmUwsJCPB4POzs76HQ6rly5Qm9vL5FIhOLiYpaWloC30AF2d3fjYsbw+/2oVCokEgl+vx+l
      UkkgEBAL4IXDYZRKJTabDaVSiUajQSaTEY1GkUql4rQpMzPzgxbBJpOJlJSU96o0mUxDTKyM
      7MWLF+nr6+Pzzz/n0aNH4oGunp4etFpt0h1h6+vrDA4OolarOXPmDHNzcwQCATo7O9nc3KSu
      ro5Hjx4hk8n4/PPPEzbNFASBwcFB9Ho9165d4/Hjx/z85z+nu7sbt9vNrVu3GMKZKkIAACAA
      SURBVBoawmw2c/36dVJTU5mamqK8vJxHjx7R1tZGeXn5sSPsXUhmB3hRCNvZ2dnn/T1Ma5e3
      qWif6GsLgoDFYqGgoOCtK8UDSKXSo9EB4lWxxGw2H/qp0zFvj0wmOxqWyHg6wg5CCT4mcRy5
      w3DHHPMiR64D2O12VldXEQQBp9Mp7gYcNpaXl7l7965YAikajfLkyRPu37+Px+NhdHSUb775
      Ju5liP4YsfSD9+/fZ29vj76+Pu7evYvP5xNf7+7uZmBgIOFC48LCArdv3xYNMbGF8aNHj4hG
      o0xPT3P//n18Ph9jY2MMDw8TiURYWVk5uiWSrFYrc3NzCILA0tJS0pXUt2V0dJS2tjYGBweB
      58KP3W6ntLSUubk58vLyuHTpUtKFsFhepWvXruH1egmFQlRVVYnOtLm5OXJzc3G73Qkt4Od2
      u8UCIj09PcDzGmHRaJSioiL6+/vR6/WcOnWKkZER9Ho9VquViYmJfWLqkesA8DyjmcViIRgM
      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
      5/E0lGQjMzNzX677KSErK2tX9+hQDIC9UoSFw+FdH78e4WDi0DXDHeEIr+JQzACvwuFwMD8/
      j0wm48qVKwfWHW5ychKTySQqvgRBoLe3l+3tbUpKSnA6nQiCQFNTU8IdI0KhEAMDA1y5cgWZ
      TIZWqyUYDNLa2srCwgJmszluM0IwGESr1ZKamkpLS0vCN8HLy8u0tLSIS6D+/n68Xi83b95k
      fHwcq9VKY2Mj09PTRCIRrl69islkoqSkBDiEM8Dm5ibnzp2jqqrqwH744aXnTVNT0w4i7O7d
      u+Tn5+P1etne3ub69esMDQ0lvBan0yk2AobDYRoaGigsLOTvv/9mdXWV+vp6cZNuNBo5c+YM
      x44dw2azJawmr9fL+vo6ra2t9PX1AS/boOVyORcuXKC/vx+bzUZ1dTV6vR6r1YrH4xGFMIda
      ERZnng8y/okICwQC2Gw2Ll26hMVi4dmzZ0lhstVqNbm5ucDLDgGTyYTZbKagoID19XUGBgbE
      sL5kEWHBYJDMzEzS09NFIiwQCJCVlbWDCDt+/Dg+n4/U1FQ2NzdFa8TJyUngkA6AkpISSktL
      97uMdyIYDOLxeEhNTSUUChGLxZifn6e4uBilUsn9+/e5ePFi0i0ebTYbJpOJe/fukZWVRXFx
      MW1tbayurhIIBETG1WKxJLQ2hUIh2kPG75FCocDpdLK8vIxGo8Hr9WK320lPT+fLL79Eo9GQ
      l5dHdXW1aNx76AZATk6OqKc9yCgrK0Or1VJVVcXDhw/Z3t4mJSVFdDPo7+9ncXFRzLpKJIxG
      IxaLhampKTY3NwmHwzx+/JhoNIpKpaKzs5O6ujrm5uY4f/48FouFlJSUhIqHVCoVGo1GJLXa
      29s5ffo0W1tbYo7aqVOnGBkZETPCcnNzqaiowGAwcOXKFeBIEfZB2C9F2BER9m7slghTqVQp
      /wevSqq9T3KljQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 15 female fifa' width='192'>
      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
      5+3/AbzJ1s8UmwgfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 15 male fifa' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='Women Avg. Fifa ranking ' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADdElEQVRYhe2YPUh6bRjGf5oWZB8EEnYyk8yl2hq0sWgIISSCCpqcHNwimmpskYKG5r6g
      qAgkCooo0KmlISL7sCiFE0hpFGimZs87/OGAxP8lB/GF12t77vs51/mdC+5zDo9KCCH4H0td
      aoBSqxxAqQFKrXIApQYotcoBlBqg1CoHUGqAUqscQKkBSq1yAMW+gRACWZaJRqM/eh8fH4TD
      Yb6+vv7V4+PjA1mW/9p/e3sjHA6TzWYL5tMUfEUBur6+ZmZmBkmSyGQy1NXV4fV6AVhbW2N3
      d5fW1lZCoRAzMzPYbLYfHhsbG2xvb2M0GonFYiwsLGAwGIA/wUxPTxOPx9Hr9dzf37OyskJD
      Q8PvIUWR9Pn5KYaGhsTd3V1eTQghgsGgcLlcIp1OCyGEeHx8FA6HQySTyTyPSCQihoeHRSKR
      EEIIsbe3J6amppT+7OysWF1dVdbpdFp8fX0VxFm0ETg5OcFut9Pe3q7UqqqqALi8vMRms1FZ
      WQmA2Wymu7ubs7OzPI/j42OcTic6nQ4Ah8PBxcUF2WyWVCrF6ekp4+Pjyv7KykoqKioK4iza
      CDw9PVFfX8/S0hIPDw9IksT4+Dj19fXo9XoODw9xu93KfrPZzPPzc57Hy8sLPT09ylqtViNJ
      EvF4nFQqhSRJ7O/vc3FxgUajYXBwkK6uroI4ixZALpfDZDLhcDiUmtvtxuPx0NfXh91uZ2tr
      i1gshsViIR6P09LSkueh1Wp/vCCz2SxarZZEIoFOp8PpdOJ0OgHY2dnh6OiIiYmJX3MWbQQk
      SSIYDObVmpubSSaTAFRXVzM6OorH42FgYICrqyva2try9hsMBm5ubpR1JpMhGo3S0NBAU1MT
      t7e3fH9/5/knEomCOIsWQG9vL4FAQPl8pVIpzs/PsVqtAHmgfr8flUqFxWIBIBQKAdDf38/B
      wQHv7+8A+Hw+7HY7arUanU5HZ2cnPp9P8QkEAnR0dBTEqRKieIeifr+f+fl5rFYr4XCYsbEx
      RkZGABgbG0Ov15PL5Xh/f8fr9WI0GgFwuVwsLy8DsLm5yfr6Os3Nzby+vrK4uEhjYyMA0WiU
      yclJamtryWQy1NbWMjc3h0bz+8kuagDwZ2YjkQgGg4Gamhql/v39jSzLqNVq5cH/pmQySSwW
      w2QyoVKpfvRlWUaj0Sj/B4Wo6AH81/UPO8Qa7eA8Cq0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
